syntax = "proto3";
package spire.api.agent.logger.v1;
option go_package = "github.com/spiffe/spire-api-sdk/proto/spire/api/agent/logger/v1;loggerv1";

import "google/protobuf/empty.proto";
import "spire/api/types/logger.proto";

service Logger {

    // Gets the logger level.
    //
    // The caller must be local or present an admin X509-SVID.
    rpc GetLogger(GetLoggerRequest) returns (spire.api.types.Logger);

    // Sets the logger level
    //
    // The caller must be local or present an admin X509-SVID.
    rpc SetLogLevel(SetLogLevelRequest) returns (spire.api.types.Logger);

}

message ListLoggersRequest {
    // The name of the logger tree being requested, "" is the root logger
    string root_name = 1;

    // Control over whether sub-loggers under the root should be returned
    bool with_subloggers = 2;

    // The maximum number of loggers to return.  If zero, the agent may
    // impose its own page size
    int32 page_size = 3;

    // The page of partial responses being requested, "" for the first page.
    string page_token = 4;
}

message GetLoggerRequest {
}

message SetLogLevelRequest {

    enum SetValue {
        PANIC   = 0;
        FATAL   = 1;
        ERROR   = 2;
        WARN    = 3;
        INFO    = 4;
        DEBUG   = 5;
        TRACE   = 6;
        DEFAULT = 7;
    }

    // The new level the logger should assume
    SetValue set_level = 1;

}

