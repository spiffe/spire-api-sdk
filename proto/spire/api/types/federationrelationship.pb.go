// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: spire/api/types/federationrelationship.proto

package types

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type FederationRelationship struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The trust domain name (e.g., "example.org") to federate with.
	TrustDomain string `protobuf:"bytes,1,opt,name=trust_domain,json=trustDomain,proto3" json:"trust_domain,omitempty"`
	// IP address or DNS name of the SPIFFE bundle endpoint that provides the trust
	// bundle to federate with.
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	// Port number of the SPIFFE bundle endpoint that provides the trust
	// bundle to federate with.
	Port int32 `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	// Required. Authentication method.
	//
	// Types that are assignable to Authentication:
	//	*FederationRelationship_Spiffe
	//	*FederationRelationship_WebPki
	Authentication isFederationRelationship_Authentication `protobuf_oneof:"authentication"`
}

func (x *FederationRelationship) Reset() {
	*x = FederationRelationship{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spire_api_types_federationrelationship_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FederationRelationship) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FederationRelationship) ProtoMessage() {}

func (x *FederationRelationship) ProtoReflect() protoreflect.Message {
	mi := &file_spire_api_types_federationrelationship_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FederationRelationship.ProtoReflect.Descriptor instead.
func (*FederationRelationship) Descriptor() ([]byte, []int) {
	return file_spire_api_types_federationrelationship_proto_rawDescGZIP(), []int{0}
}

func (x *FederationRelationship) GetTrustDomain() string {
	if x != nil {
		return x.TrustDomain
	}
	return ""
}

func (x *FederationRelationship) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *FederationRelationship) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (m *FederationRelationship) GetAuthentication() isFederationRelationship_Authentication {
	if m != nil {
		return m.Authentication
	}
	return nil
}

func (x *FederationRelationship) GetSpiffe() *SPIFFEAuthentication {
	if x, ok := x.GetAuthentication().(*FederationRelationship_Spiffe); ok {
		return x.Spiffe
	}
	return nil
}

func (x *FederationRelationship) GetWebPki() *WebPKIAuthentication {
	if x, ok := x.GetAuthentication().(*FederationRelationship_WebPki); ok {
		return x.WebPki
	}
	return nil
}

type isFederationRelationship_Authentication interface {
	isFederationRelationship_Authentication()
}

type FederationRelationship_Spiffe struct {
	// Use SPIFFE authentication.
	Spiffe *SPIFFEAuthentication `protobuf:"bytes,4,opt,name=spiffe,proto3,oneof"`
}

type FederationRelationship_WebPki struct {
	// Use Web PKI authentication.
	WebPki *WebPKIAuthentication `protobuf:"bytes,5,opt,name=web_pki,json=webPki,proto3,oneof"`
}

func (*FederationRelationship_Spiffe) isFederationRelationship_Authentication() {}

func (*FederationRelationship_WebPki) isFederationRelationship_Authentication() {}

type SPIFFEAuthentication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Specifies the expected SPIFFE ID of the SPIFFE bundle endpoint server.
	// The SPIRE Server SPIFFE ID within the trust domain will be
	// used if this is empty.
	SpiffeId string `protobuf:"bytes,1,opt,name=spiffe_id,json=spiffeId,proto3" json:"spiffe_id,omitempty"`
}

func (x *SPIFFEAuthentication) Reset() {
	*x = SPIFFEAuthentication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spire_api_types_federationrelationship_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SPIFFEAuthentication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SPIFFEAuthentication) ProtoMessage() {}

func (x *SPIFFEAuthentication) ProtoReflect() protoreflect.Message {
	mi := &file_spire_api_types_federationrelationship_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SPIFFEAuthentication.ProtoReflect.Descriptor instead.
func (*SPIFFEAuthentication) Descriptor() ([]byte, []int) {
	return file_spire_api_types_federationrelationship_proto_rawDescGZIP(), []int{1}
}

func (x *SPIFFEAuthentication) GetSpiffeId() string {
	if x != nil {
		return x.SpiffeId
	}
	return ""
}

type WebPKIAuthentication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WebPKIAuthentication) Reset() {
	*x = WebPKIAuthentication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spire_api_types_federationrelationship_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebPKIAuthentication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebPKIAuthentication) ProtoMessage() {}

func (x *WebPKIAuthentication) ProtoReflect() protoreflect.Message {
	mi := &file_spire_api_types_federationrelationship_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebPKIAuthentication.ProtoReflect.Descriptor instead.
func (*WebPKIAuthentication) Descriptor() ([]byte, []int) {
	return file_spire_api_types_federationrelationship_proto_rawDescGZIP(), []int{2}
}

type FederationRelationshipMask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address field mask.
	Address bool `protobuf:"varint,1,opt,name=address,proto3" json:"address,omitempty"`
	// Port field mask.
	Port bool `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	// Authentication field mask.
	Authentication bool `protobuf:"varint,3,opt,name=authentication,proto3" json:"authentication,omitempty"`
}

func (x *FederationRelationshipMask) Reset() {
	*x = FederationRelationshipMask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spire_api_types_federationrelationship_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FederationRelationshipMask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FederationRelationshipMask) ProtoMessage() {}

func (x *FederationRelationshipMask) ProtoReflect() protoreflect.Message {
	mi := &file_spire_api_types_federationrelationship_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FederationRelationshipMask.ProtoReflect.Descriptor instead.
func (*FederationRelationshipMask) Descriptor() ([]byte, []int) {
	return file_spire_api_types_federationrelationship_proto_rawDescGZIP(), []int{3}
}

func (x *FederationRelationshipMask) GetAddress() bool {
	if x != nil {
		return x.Address
	}
	return false
}

func (x *FederationRelationshipMask) GetPort() bool {
	if x != nil {
		return x.Port
	}
	return false
}

func (x *FederationRelationshipMask) GetAuthentication() bool {
	if x != nil {
		return x.Authentication
	}
	return false
}

var File_spire_api_types_federationrelationship_proto protoreflect.FileDescriptor

var file_spire_api_types_federationrelationship_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f,
	0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22,
	0xfe, 0x01, 0x0a, 0x16, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72,
	0x75, 0x73, 0x74, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x74, 0x72, 0x75, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x3f, 0x0a, 0x06, 0x73,
	0x70, 0x69, 0x66, 0x66, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x70,
	0x69, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x50,
	0x49, 0x46, 0x46, 0x45, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x73, 0x70, 0x69, 0x66, 0x66, 0x65, 0x12, 0x40, 0x0a, 0x07,
	0x77, 0x65, 0x62, 0x5f, 0x70, 0x6b, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x57, 0x65, 0x62, 0x50, 0x4b, 0x49, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x77, 0x65, 0x62, 0x50, 0x6b, 0x69, 0x42, 0x10,
	0x0a, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x33, 0x0a, 0x14, 0x53, 0x50, 0x49, 0x46, 0x46, 0x45, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x70, 0x69, 0x66,
	0x66, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x70, 0x69,
	0x66, 0x66, 0x65, 0x49, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x57, 0x65, 0x62, 0x50, 0x4b, 0x49, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x72, 0x0a,
	0x1a, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x73, 0x70, 0x69, 0x66, 0x66, 0x65, 0x2f, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2d, 0x61, 0x70, 0x69,
	0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x70, 0x69, 0x72, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_spire_api_types_federationrelationship_proto_rawDescOnce sync.Once
	file_spire_api_types_federationrelationship_proto_rawDescData = file_spire_api_types_federationrelationship_proto_rawDesc
)

func file_spire_api_types_federationrelationship_proto_rawDescGZIP() []byte {
	file_spire_api_types_federationrelationship_proto_rawDescOnce.Do(func() {
		file_spire_api_types_federationrelationship_proto_rawDescData = protoimpl.X.CompressGZIP(file_spire_api_types_federationrelationship_proto_rawDescData)
	})
	return file_spire_api_types_federationrelationship_proto_rawDescData
}

var file_spire_api_types_federationrelationship_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_spire_api_types_federationrelationship_proto_goTypes = []interface{}{
	(*FederationRelationship)(nil),     // 0: spire.api.types.FederationRelationship
	(*SPIFFEAuthentication)(nil),       // 1: spire.api.types.SPIFFEAuthentication
	(*WebPKIAuthentication)(nil),       // 2: spire.api.types.WebPKIAuthentication
	(*FederationRelationshipMask)(nil), // 3: spire.api.types.FederationRelationshipMask
}
var file_spire_api_types_federationrelationship_proto_depIdxs = []int32{
	1, // 0: spire.api.types.FederationRelationship.spiffe:type_name -> spire.api.types.SPIFFEAuthentication
	2, // 1: spire.api.types.FederationRelationship.web_pki:type_name -> spire.api.types.WebPKIAuthentication
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_spire_api_types_federationrelationship_proto_init() }
func file_spire_api_types_federationrelationship_proto_init() {
	if File_spire_api_types_federationrelationship_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_spire_api_types_federationrelationship_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FederationRelationship); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spire_api_types_federationrelationship_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SPIFFEAuthentication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spire_api_types_federationrelationship_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebPKIAuthentication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spire_api_types_federationrelationship_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FederationRelationshipMask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_spire_api_types_federationrelationship_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*FederationRelationship_Spiffe)(nil),
		(*FederationRelationship_WebPki)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spire_api_types_federationrelationship_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_spire_api_types_federationrelationship_proto_goTypes,
		DependencyIndexes: file_spire_api_types_federationrelationship_proto_depIdxs,
		MessageInfos:      file_spire_api_types_federationrelationship_proto_msgTypes,
	}.Build()
	File_spire_api_types_federationrelationship_proto = out.File
	file_spire_api_types_federationrelationship_proto_rawDesc = nil
	file_spire_api_types_federationrelationship_proto_goTypes = nil
	file_spire_api_types_federationrelationship_proto_depIdxs = nil
}
